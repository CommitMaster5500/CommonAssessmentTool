name: Python CI Pipeline

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  lint-and-format:
    name: Code Linting & Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install linters and formatters
        run: |
          python -m pip install --upgrade pip
          pip install black flake8

      - name: Run flake8
        run: flake8 .
        continue-on-error: true

      - name: Check code format with black
        run: black --check .
        continue-on-error: true

  test:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    name: Run Tests
    needs: lint-and-format

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4 # Checkout the repository

      - name: Set up Python
        uses: actions/setup-python@v5 # Set up Python environment
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # Upgrade pip to the latest version
          pip install setuptools wheel
          pip install -r requirements.txt  # Install dependencies from requirements.txt
          pip install pylint pytest

      - name: Run Tests
        run: |
          python -m pytest tests/

      - name: Print Success Message
        run: |
          echo "CI Pipeline completed successfully!"
          echo "========================"
          echo "✓ Code checked out"
          echo "✓ Python environment set up"
          echo "✓ Dependencies installed"
          echo "✓ Tests executed"
          echo "✓ Linting completed"
          echo "========================"

  docker:
    name: Docker Lint, Build, and Run Validation
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Lint Dockerfile with Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Build Docker Image for Common Assessment Tool
        run: docker build -t common-assessment-tool:latest .

      - name: Run Docker Container for Validation
        run: |
          # Run the Docker container in detached mode
          docker run -d --name common-assessment-tool-container common-assessment-tool:latest

          sleep 3

          # Verify if the container is running correctly
          docker ps

          # Display logs from the running container
          docker logs common-assessment-tool-container

      - name: Stop and Remove the Docker Container
        run: |
          docker stop common-assessment-tool-container
          docker rm common-assessment-tool-container
